language: cpp
dist: bionic
os: linux
#sudo: false   # should speedup build

env:
  global:
    - MAKEFLAGS="-j 3"

notifications:
 email:
  recipients:
  - boutwork@gmail.com
  on_success: change
  on_failure: always

git:
 depth: false

matrix:
 include:
 - os: linux
   env: "Trailing Whitespace"
   script: |
    if [[ -n $(git diff --check HEAD^) ]]; then
      echo "You must remove whitespace before submitting a pull request"
      git diff --check HEAD^
      exit -1
    fi

 - os: linux
   env: "math helper library"
   script:
   - cd math_helper
   - cmake -H. -Bbuild
   - cmake --build build
   - cmake --install build --prefix install

 - os: linux
   env: "Configuration: Release/Debug and Ninja Generator"
   addons:
    apt:
     packages: ninja-build
   script:
   - cmake -H. -Brelease -DCMAKE_BUILD_TYPE=Release
   - cmake --build release
   -
   - cmake -H. -Bdebug -DCMAKE_BUILD_TYPE=Debug
   - cmake --build debug
   -
   - cmake -H. -Bninja -GNinja
   - cmake --build ninja

 - os: linux
   env: "g++-5/6/7"
   addons:
    apt:
     sources: ubuntu-toolchain-r-test
     packages:
     - g++-5
     - g++-6
     - g++-7
   script:
   - cmake -H. -Bbuild5 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER="g++-5"
   - cmake --build build5
   -
   - cmake -H. -Bbuild6 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER="g++-6"
   - cmake --build build6
   -
   - cmake -H. -Bbuild7 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER="g++-7"
   - cmake --build build7

 - os: linux
   env: "clang-4.0/5.0"
   addons:
    apt:
     sources:
     - llvm-toolchain-bionic-4.0
     - llvm-toolchain-bionic-5.0
     packages:
     - clang-4.0
     - clang-5.0
   script:
   - cmake -H. -Bclang4 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER="clang++-4.0"
   - cmake --build clang4
   -
   - cmake -H. -Bclang5 -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER="clang++-5.0"
   - cmake --build clang5

 - os: linux
   env: "Test"
   addons:
    apt:
     sources: ubuntu-toolchain-r-test
     packages: g++-7
   script:
   - cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER="g++-7"
   - cmake --build build
   - cmake --build build --target test

 - os: linux
   env: "CppCheck"
   script:
   - cmake -H. -Bbuild -DENABLE_CPPCHECK=ON
   - cmake --build build
   - cmake --build build --target cpp-check

 - os: linux
   env: "Code coverage"
   addons:
    apt:
     sources: ubuntu-toolchain-r-test
     packages: g++-7
   script:
   - cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER="g++-7" -DENABLE_COVERAGE=ON
   - cmake --build build
   - cmake --build build --target test
   after_success:
   - bash <(curl -s https://codecov.io/bash)

 - os: linux
   env: "Google Address/Undefined/Thread Sanitizer"
   addons:
    apt:
     sources: ubuntu-toolchain-r-test
     packages: g++-7
   script:
   - cmake -H. -Basan -DCMAKE_CXX_COMPILER="g++-7" -DENABLE_ASAN=ON
   - cmake --build asan
   - cmake --build asan --target test
   -
   - cmake -H. -Busan -DCMAKE_CXX_COMPILER="g++-7" -DENABLE_USAN=ON
   - cmake --build usan
   - cmake --build usan --target test
   -
   - cmake -H. -Btsan -DCMAKE_CXX_COMPILER="g++-7" -DENABLE_TSAN=ON
   - cmake --build tsan
   #- cmake --build tsan --target test
